---
import Base from "@layouts/Base.astro";
import type {CollectionEntry} from "astro:content";
import FormattedDate from "@components/FormattedDate.astro";
import CalendarIcon from "@icons/CalendarIcon.astro";
import CategoryIcon from "@icons/CategoryIcon.astro";
import {Image} from "astro:assets";
import config from "@config/config.json";
import {slugify} from "@utils/slug";

type Props = CollectionEntry<"blog">["data"];

const {title, metaDescription, keywords, pubDate, heroImage, categories, tags, author, source, sourceUrl} =
    Astro.props;
---

<Base
        metaTitle={title}
        image={heroImage}
        metaDescription: {metaDescription}
        keywords: {keywords}
        blogpost
>
    <article>

        <div class="rounded-lg block overflow-hidden mb-12">
            {
                heroImage && (
                            <figure class="w-auto h-auto md:h-[480px] object-cover">
                                <Image
                                        class="transition duration-300 ease-in-out hover:scale-110"
                                        src={heroImage}
                                        alt={title}
                                        width={960}
                                        height={480}
                                        decoding="async"
                                        loading="lazy"
                                />
                            </figure>
                )
            }
        </div>

        <div class="mb-12">
            <h1 class="md:text-center">{title}</h1>

            <div class="flex flex-wrap items-center justify-between md:justify-center gap-6">

                <div class="flex items-center text-sm text-stone-500">
                    <CalendarIcon/>
                    <FormattedDate date={pubDate}/>
                </div>
                <div class="flex items-center text-sm text-stone-500">
                    {
                        categories?.slice(0, 1).map((category) => (
                                <a
                                        href={`/categories/${slugify(category)}`}
                                        class="tag text-base"
                                >
                                    {category}
                                </a>
                        ))
                    }
                </div>
            </div>
        </div>

        <div class="prose prose-stone prose-md md:prose-lg min-w-full">
            <slot/>
        </div>

        <div class="mt-12 text-stone-300">Fuente: <a href={sourceUrl} target="_blank" class="link font-medium">{source}</a></div>
        <div class="mt-12">
            {
                tags?.map((tag) => (
                        <a
                                href={`/tags/${slugify(tag)}`}
                                class="tag text-base"
                        >
                            {tag}
                        </a>
                ))
            }
        </div>
    </article>
</Base>
