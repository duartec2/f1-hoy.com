---
import Header from "@components/Header.astro";
import Hero from "@components/Hero.astro";
import FeaturedVideos from "@components/FeaturedVideos.astro";
import Footer from "@components/Footer.astro";
import config from "@config/config.json";
import { createOgImage } from "@utils/createOgImage";

import "@styles/global.css";

import { ViewTransitions } from "astro:transitions";

export interface Props {
  title?: string;
  metaTitle?: string;
  metaDescription?: string;
  keywords?: string;
  description?: string;

  image?: string;
  noindex?: boolean;
  canonical?: string;
  blogpost?: boolean;
}

const { title, metaTitle, metaDescription, keywords, description, image, noindex, blogpost } = Astro.props;

/*const ogImage = createOgImage({
  title: metaTitle ? metaTitle : title ? title : config.site.title,
  meta: [config.site.title, config.site.base_url].join(" Â· "),
});*/
---

<!doctype html>
<html lang={config.site.lang}>
  <head>
    <!-- favicon -->
    <link rel="shortcut icon" href={config.site.favicon} />
    <!-- theme meta -->
    <meta name="theme-name" content="bookworm-light-astro" />
    <meta name="msapplication-TileColor" content="#000000" />
    <meta
      name="theme-color"
      media="(prefers-color-scheme: light)"
      content="#fff"
    />
    <meta name="generator" content={Astro.generator} />
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <!-- responsive meta -->
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, maximum-scale=5"
    />

    <title>{ metaTitle ? metaTitle : title ? title : config.site.title}</title>
    <meta
      name="title"
      content={metaTitle ? metaTitle : title ? title : config.site.title}
    />
    <link
      rel="canonical"
      href={`${config.site.base_url}/${Astro.url.pathname.replace("/", "")}`}
      item-prop="url"
    />
    {noindex && <meta name="robots" content="noindex,nofollow" />}

    <meta
      name="description"
      content={metaDescription ? metaDescription : description ? description : config.metadata.meta_description}
    />
    <!-- author from config.json -->
    <meta name="author" content={config.metadata.meta_author} />

    <meta name="keywords" content={keywords} />

    <!-- og-title -->
    <meta
      property="og:title"
      content={metaTitle ? metaTitle : title ? title : config.site.title}
    />
    <!-- og-description -->
    <meta
      property="og:description"
      content={metaDescription ? metaDescription : description ? description : config.metadata.meta_description}
    />
    <meta property="og:type" content="website" />
    <meta
      property="og:url"
      content={`${config.site.base_url}/${Astro.url.pathname.replace("/", "")}`}
    />

    <!-- twitter-title -->
    <meta
      name="twitter:title"
      content={metaTitle ? metaTitle : title ? title : config.site.title}
    />
    <!-- twitter-description -->
    <meta
      name="twitter:description"
      content={metaDescription ? metaDescription : description ? description : config.metadata.meta_description}
    />
    <!-- og-image -->
    <meta property="og:image" content={image ? image : config.site.ogImage} />
    <!-- twitter-image -->
    <meta name="twitter:image" content={image ? image : config.site.ogImage} />
    <meta name="twitter:card" content="summary_large_image" />

    <script is:inline src="/registerSW.js"></script>
    <link rel="manifest" href="/manifest.webmanifest" />
    <link rel="alternate" type="application/rss+xml" title={config.site.title} href={new URL("rss.xml", Astro.site)}/>

    <ViewTransitions />
  </head>
  <body class="bg-white dark:bg-zinc-900/95">
    <Header />
    {!blogpost && <Hero />}
    <main class="mx-auto max-w-screen-lg px-4 py-8 sm:px-6 sm:py-12 lg:px-8">
      <slot />
    </main>
    {!blogpost && config.features.youtube && <FeaturedVideos />}
    <Footer />
    <script>
      // This is a hack to get vite-plugin-pwa to generate a sw.js file.
      // Do not remove this script tag.
    </script>
  </body>
</html>
